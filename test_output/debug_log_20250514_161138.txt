=== 暗号学的ハニーポット方式 - デバッグツール ===
実行日時: 2025-05-14 16:11:38
Python バージョン: 3.12.8 (v3.12.8:2dc476bcb91, Dec  3 2024, 14:43:20) [Clang 13.0.0 (clang-1300.0.29.30)]
ログファイル: test_output/debug_log_20250514_161138.txt

=== トラップドア関数のデバッグ ===
マスター鍵: ef9f449a3112e088ff9faae2c0ff11cf047f7c3254ec68525d09b6add1c04667

トラップドアパラメータ:
  n: 25624979474684296216945790804291406617449279649706505944215916649243771627800989262005552125562905995555569229783052592268998978225335522237820260318143123903221356467248862350125938306843001307161934891090137104360132089590350485756671140584754123668488152515683239483227598182435694167346642049021032032288883580717487645202806551800539419408401710355444552464463572807072774882963645632792965254766161727977870949884068616603107089289290619425316823862757376914474057607040812595692529498360394899480657138797079302753769541416869366676367621573487617583152339293726362501022274464369863300229889931214239982843073
  e: 65537
  d: 25075624207248627263761958219949288023410549803850918400513529251404573935855059635792606755216141832964123561414876006643505843592889783056226085031709642219836001540467278640131172856469709627094758814645050471898683051857856742794861430764018057877343824055660123510968648650929489270797791291756058810972886517570380171420645330609820747633706531902469142932253562167095103594532693473105395840580249629436216629998165300660004775126962890250810291330279768589284476185345602069041219984845872275232665926916080663577776245299908575325093802786741685380033750882178006835926331369881405729559856461685352992790353
  p: 175400911172873196362980499089174500203812490549954835872071662048945534035166904606070572266282114656822503907100471626306761782427753321977431480727389381278483055372987849645999509571650005572815281140586493986216641303512483801594182933575221131577353389237530126844316092031338878406566906473485909983291
  q: 146093764868921348506300794124380477488969696552424916823558405909006728787377060580889455715936808413025473355035891041873411965545474810890161687329289066970652270139185021747358995418135349500631309844181038529657281885013648591098010566022765148149676674068760740576885912600520191514517546516576141585203
  true_param: 92240410560014464217125209279807491994863949321250928831750383550823619522006
  false_param: 95332245109364351182514298292912043492312560159556535374626250026732279014331
  seed: 5c567e654ae5ade1... (バイナリデータ)

暗号用ソルト: a5daed0d4d496557293e848133c13e82
正規鍵: 2f70752d46bf698be03b303971adc851e96dd47bb58b7d82e2b7264f8d16111b
非正規鍵: 6fc6d9eaf0167940fe97f71c2b746d0a4ff7ee6873e5a4626484312d17ee40e2

ハニートークン:
  正規トークン: 2fc4734bb91d8f69...
  非正規トークン: 5e4cc8859caa9c45...

=== 動的経路選択のデバッグ ===
経路選択器を初期化しました
判定関数の数: 5
経路の数: 8

経路選択結果:
  正規鍵の経路: true
  非正規鍵の経路: false

判定関数の詳細:
  関数 1 (重み 3):
    正規鍵の判定: False
    非正規鍵の判定: False
  関数 2 (重み 1):
    正規鍵の判定: False
    非正規鍵の判定: False
  関数 3 (重み 1):
    正規鍵の判定: False
    非正規鍵の判定: False
  関数 4 (重み 3):
    正規鍵の判定: True
    非正規鍵の判定: True
  関数 5 (重み 2):
    正規鍵の判定: True
    非正規鍵の判定: True

判定関数の結果グラフを保存しました: test_output/dynamic_path_results_20250514_161139.png

=== 難読化検証機構のデバッグ ===
難読化検証機構を初期化しました

検証結果:
  正規鍵の検証: False
  非正規鍵の検証: False

ランダム鍵のテスト (10回):
  ランダム鍵 1: 正規
  ランダム鍵 2: 正規
  ランダム鍵 3: 非正規
  ランダム鍵 4: 非正規
  ランダム鍵 5: 非正規
  ランダム鍵 6: 正規
  ランダム鍵 7: 非正規
  ランダム鍵 8: 正規
  ランダム鍵 9: 非正規
  ランダム鍵 10: 正規

ランダム鍵の正規判定率: 50.0%

=== 改変耐性機能のデバッグ ===
標準検証:
  正規鍵の検証結果: true
  非正規鍵の検証結果: true

閾値変動のシミュレーション (10回):
  試行 1 (閾値=4): 正規=false, 非正規=true
  試行 2 (閾値=3): 正規=false, 非正規=true
  試行 3 (閾値=6): 正規=false, 非正規=false
  試行 4 (閾値=4): 正規=false, 非正規=true
  試行 5 (閾値=2): 正規=false, 非正規=true
  試行 6 (閾値=2): 正規=false, 非正規=true
  試行 7 (閾値=6): 正規=true, 非正規=true
  試行 8 (閾値=3): 正規=false, 非正規=true
  試行 9 (閾値=2): 正規=true, 非正規=true
  試行 10 (閾値=2): 正規=true, 非正規=false

一貫性チェック:
  正規鍵の一貫性: NG
  非正規鍵の一貫性: NG

=== ハニーポットカプセルのデバッグ ===
テストデータ:
  正規データ: b'This is secret true data!'
  非正規データ: b'This is fake false data.'

ハニーポットカプセル作成完了: 800 バイト
署名検証結果: 成功

正規鍵でのデータ抽出: 24 バイト
  抽出データ: b'This is fake false data.'

非正規鍵でのデータ抽出: 25 バイト
  抽出データ: b'This is secret true data!'

ランダム鍵でのテスト:
  抽出データ: b'This is fake false data.'

=== デバッグ完了 ===
ログファイル: test_output/debug_log_20250514_161138.txt

=== 暗号学的ハニーポット方式 - 改変耐性テスト ===
実行日時: 2025-05-13 15:54:29
Python バージョン: 3.12.8 (v3.12.8:2dc476bcb91, Dec  3 2024, 14:43:20) [Clang 13.0.0 (clang-1300.0.29.30)]
テスト開始...

モジュール改変シミュレーション:

モジュール 'trapdoor' の改変シミュレーション:
"""
トラップドア関数モジュール

マスター鍵から正規鍵と非正規鍵を生成し、入力鍵が正規かどうかを
数学的に判定する機能を提供します。この判定ロジックはソースコード
...

モジュール 'key_verification' の改変シミュレーション:
"""
鍵検証機構モジュール

入力された鍵が正規のものか非正規のものかを安全に検証し、
適切な処理経路を選択するための機能を提供します。
...

モジュール 'deception' の改変シミュレーション:
"""
スクリプト改変耐性モジュール

ソースコードが解析・改変された場合でも、鍵による真偽判定機能を
維持するための防御機構を提供します。
...

=== 判定関数の複雑性と難読化のテスト ===
判定関数の数: 5
関数の評価 - 重み: 2, 正規: False, 非正規: False
関数の評価 - 重み: 2, 正規: False, 非正規: False
関数の評価 - 重み: 2, 正規: False, 非正規: False
関数の評価 - 重み: 2, 正規: True, 非正規: True
関数の評価 - 重み: 1, 正規: False, 非正規: False
正規鍵に対するTrue判定の関数数: 1/5
非正規鍵に対するFalse判定の関数数: 4/5

=== 動的経路選択のテスト ===
正規鍵の経路選択結果: false
非正規鍵の経路選択結果: true
正規鍵の経路選択結果（複数回）: ['false', 'false', 'false', 'false', 'false']
非正規鍵の経路選択結果（複数回）: ['true', 'true', 'true', 'true', 'true']

=== モジュール整合性検証のテスト ===
モジュール 'trapdoor' のハッシュ: 06c0e8e9a0253c74e69ed8dfd9fbe0142be0763fb671871c934c7ed73efe3370
モジュール 'key_verification' のハッシュ: 781e65a06f8a5a51ac7d8d898564f6937764ea6f2cc4220fd0d4ece002da5ade
モジュール 'honeypot_capsule' のハッシュ: 961f34c956e83d0df1d03ef8616fb3e3c1b99f61ef9b67ba1538af9f7242ab67
モジュール 'encrypt' のハッシュ: 00e66f98fb4109fbe0e2f0d9a20233ee052ffea0823e43d814d70b814ccd99ff
モジュール 'decrypt' のハッシュ: 928a50e6223b1d92d0b3e7b0fdc60af643e8b663bc40ef2c8d1966ecc643a750
モジュール 'deception' のハッシュ: 05cca25db72550729b7dcb0e897b7d008bb696e0a71c344bfda87b6850a11ae3

=== 難読化された検証機構のテスト ===
正規鍵の検証結果: False
非正規鍵の検証結果: True

=== 改変耐性を備えた検証のテスト ===
正規鍵の検証結果: false
非正規鍵の検証結果: false

テスト完了。

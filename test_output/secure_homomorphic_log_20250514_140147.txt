[2025-05-14 14:01:47] ====== 準同型暗号マスキング方式 完全検証テスト 開始 ======
[2025-05-14 14:01:47] ====== 準同型暗号マスキング方式 暗号化テスト ======
[2025-05-14 14:01:47] テストファイルの読み込み: common/true-false-text/t.text, common/true-false-text/f.text
[2025-05-14 14:01:47] テキストファイル読み込み成功:
[2025-05-14 14:01:47]   真テキストサイズ: 300バイト
[2025-05-14 14:01:47]   偽テキストサイズ: 300バイト
[2025-05-14 14:01:47] 真テキスト内容:
[2025-05-14 14:01:47] 　　｡:🌸・｡･ﾟ🌸*.ﾟ｡
　･🌸.🌸.🌼🌸｡:*･.🌼
　.ﾟ🌼.｡;｡🌸.:*🌸.ﾟ｡🌸｡
　:*｡_🌸🌼｡_🌸*･_ﾟ🌸
　　＼ξ　＼　ζ／
　　　∧🎀∧＼ξ
　　（＊･ω･)／
　　c/　つ∀o
　　.しー-Ｊおめでとう～🎉☠️
[2025-05-14 14:01:47] 偽テキスト内容:
[2025-05-14 14:01:47] 　　｡:🌸・｡･ﾟ🌸*.ﾟ｡
　･🌸.🌸.🌼🌸｡:*･.🌼
　.ﾟ🌼.｡;｡🌸.:*🌸.ﾟ｡🌸｡
　:*｡_🌸🌼｡_🌸*･_ﾟ🌸
　　＼ξ　＼　ζ／
　　　∧🎀∧＼ξ
　　（＊･ω･)／
　　c/　つ∀o
　　.しー-Ｊおめでとう～☠️🎉
[2025-05-14 14:01:47] 準同型暗号システムを初期化中...
[2025-05-14 14:01:47] 公開鍵生成完了: n=114622942092594221852455779190696964995590092927427878506974587860962034139879750601188920532624089817134652406194857873608960726452518141540510295134910926579840173278941576824728915570237746169762675964116525161684225786733022624486105023909671598541601558480591813032767610460884125998464201498256621959601, g=114622942092594221852455779190696964995590092927427878506974587860962034139879750601188920532624089817134652406194857873608960726452518141540510295134910926579840173278941576824728915570237746169762675964116525161684225786733022624486105023909671598541601558480591813032767610460884125998464201498256621959602
[2025-05-14 14:01:47] 真偽判別用の鍵を生成中...
[2025-05-14 14:01:47] 鍵生成完了:
[2025-05-14 14:01:47]   真鍵: e9384790cf8c110f755db2e5a3b11266bbaa375df20b047acb0b9fff4fb4a53d
[2025-05-14 14:01:47]   偽鍵: 8ca83ef960d131f0fc12198516ad86514ce201abe4b666793b4ee599f06085b7
[2025-05-14 14:01:47] データを前処理中...
[2025-05-14 14:01:47] [DEBUG] 暗号化前: データタイプ=text, サイズ=300バイト
[2025-05-14 14:01:47] [DEBUG] テキスト内容: b'\xe3\x80\x80\xe3\x80\x80\xef\xbd\xa1:\xf0\x9f\x8c\xb8\xe3\x83\xbb\xef\xbd\xa1\xef\xbd\xa5\xef\xbe\x9f\xf0\x9f\x8c\xb8'...
[2025-05-14 14:01:47] [DEBUG] utf-8でデコードに成功しました
[2025-05-14 14:01:47] [DEBUG] 多段エンコーディング開始: '　　｡:🌸・｡･ﾟ🌸*.ﾟ｡
　･🌸.🌸.🌼🌸｡:*･.🌼
　.ﾟ🌼.｡;｡🌸.:*🌸.ﾟ｡🌸｡
　...' (長さ: 119)
[2025-05-14 14:01:47] [DEBUG] UTF-8エンコード後: 300バイト
[2025-05-14 14:01:47] [DEBUG] Base64エンコード後: 400バイト
[2025-05-14 14:01:47] [DEBUG] 最終結果 (先頭30バイト): b'TXT-MULTI:utf8-base64:44CA44CA'
[2025-05-14 14:01:47] [DEBUG] 多段エンコーディング適用後のサイズ: 422バイト
[2025-05-14 14:01:47] [DEBUG] 変換後先頭バイト: b'TXT-MULTI:utf8-base64:44CA44CA'
[2025-05-14 14:01:47] [DEBUG] テキスト内容: b'\xe3\x80\x80\xe3\x80\x80\xef\xbd\xa1:\xf0\x9f\x8c\xb8\xe3\x83\xbb\xef\xbd\xa1\xef\xbd\xa5\xef\xbe\x9f\xf0\x9f\x8c\xb8'...
[2025-05-14 14:01:47] [DEBUG] utf-8でデコードに成功しました
[2025-05-14 14:01:47] [DEBUG] 多段エンコーディング開始: '　　｡:🌸・｡･ﾟ🌸*.ﾟ｡
　･🌸.🌸.🌼🌸｡:*･.🌼
　.ﾟ🌼.｡;｡🌸.:*🌸.ﾟ｡🌸｡
　...' (長さ: 119)
[2025-05-14 14:01:47] [DEBUG] UTF-8エンコード後: 300バイト
[2025-05-14 14:01:47] [DEBUG] Base64エンコード後: 400バイト
[2025-05-14 14:01:47] [DEBUG] 最終結果 (先頭30バイト): b'TXT-MULTI:utf8-base64:44CA44CA'
[2025-05-14 14:01:47] [DEBUG] 多段エンコーディング適用後のサイズ: 422バイト
[2025-05-14 14:01:47] [DEBUG] 変換後先頭バイト: b'TXT-MULTI:utf8-base64:44CA44CA'
[2025-05-14 14:01:47] 前処理完了:
[2025-05-14 14:01:47]   真データタイプ: text, サイズ: 422バイト
[2025-05-14 14:01:47]   偽データタイプ: text, サイズ: 422バイト
[2025-05-14 14:01:47] チャンク分割完了:
[2025-05-14 14:01:47]   真チャンク数: 7
[2025-05-14 14:01:47]   偽チャンク数: 7
[2025-05-14 14:01:47] 暗号化完了:
[2025-05-14 14:01:47]   真暗号化チャンク数: 7
[2025-05-14 14:01:47]   偽暗号化チャンク数: 7
[2025-05-14 14:01:47] マスク関数を生成中...
[2025-05-14 14:01:47] マスク関数を適用して真偽チャンクを変換中...
[2025-05-14 14:01:47] 暗号文を識別不能な形式に変換中...
[2025-05-14 14:01:47] 暗号化データを保存中: test_output/secure_homomorphic_encrypted.json
[2025-05-14 14:01:47] 暗号化データを保存しました: サイズ=9894バイト
[2025-05-14 14:01:47] 元ファイルのハッシュを保存しました: test_output/secure_homomorphic_sha256.txt
[2025-05-14 14:01:47] ====== 準同型暗号マスキング方式 復号テスト (true鍵) ======
[2025-05-14 14:01:47] 暗号化ファイルを読み込み中: test_output/secure_homomorphic_encrypted.json
[2025-05-14 14:01:47] 暗号化ファイル読み込み完了
[2025-05-14 14:01:47] 鍵タイプ: true鍵
[2025-05-14 14:01:47] true鍵用のデータを抽出中...
[2025-05-14 14:01:47] マスクを除去中...
[2025-05-14 14:01:47] 復号中...
[2025-05-14 14:01:48] 復号後データ先頭: b'\x1fY\xcc\xb2=\xc8_E\xd3mC\x81\xdd-\xab\x10\x8cB\xd3\x82\xcf}\xe4\x8b\r3CM\x16\x871\xe7\xe1\x82\xe4\xe6O\x84\x18%\xdeY>S\xe5Q|ia\xa5'
[2025-05-14 14:01:48] 復号データを保存中: test_output/secure_homomorphic_true.text
[2025-05-14 14:01:48] 復号データを保存しました: サイズ=422バイト
[2025-05-14 14:01:48] 復号データはテキストではありません（バイナリデータ）
[2025-05-14 14:01:48] ====== 準同型暗号マスキング方式 復号テスト (false鍵) ======
[2025-05-14 14:01:48] 暗号化ファイルを読み込み中: test_output/secure_homomorphic_encrypted.json
[2025-05-14 14:01:48] 暗号化ファイル読み込み完了
[2025-05-14 14:01:48] 鍵タイプ: false鍵
[2025-05-14 14:01:48] false鍵用のデータを抽出中...
[2025-05-14 14:01:48] マスクを除去中...
[2025-05-14 14:01:48] 復号中...
[2025-05-14 14:01:48] 復号後データ先頭: b',\xed\x11\xad|\x12E\x80\x16\x1aS\x8b]\x08\xb5\x84\xac\x13\xaa\x80RA\x88ge\xbf\x05\x85gz6\xf8\xdfO$&\xaf\xa0\xb9\xe6\x84%\x89\x94\xa65\xcd\x104\xda'
[2025-05-14 14:01:48] 復号データを保存中: test_output/secure_homomorphic_false.text
[2025-05-14 14:01:48] 復号データを保存しました: サイズ=422バイト
[2025-05-14 14:01:48] 復号データはテキストではありません（バイナリデータ）
[2025-05-14 14:01:48] 検証結果レポートを作成中...
[2025-05-14 14:01:48] 
====== 準同型暗号マスキング方式 検証結果 ======
[2025-05-14 14:01:48] 元の真ファイルハッシュ: 088f5b0bbab0b70a3b992763d4138ad25630fff6853eab15e63602a513139d6a
[2025-05-14 14:01:48] 復号された真ファイルハッシュ: ce89d3fe3f86af27f42300670c4312a8d40e08401955091b1b189d66272a1b57
[2025-05-14 14:01:48] 真ファイル一致: 失敗 ❌
[2025-05-14 14:01:48] 元の偽ファイルハッシュ: b55cd667cee3c8d3b7ba07181912dd974f62b5b9a13a35198a052dcb960bccba
[2025-05-14 14:01:48] 復号された偽ファイルハッシュ: 5a450f5f42ae08b05af44a64dd98111fe55da6e3c327b7b9204d024f563d527e
[2025-05-14 14:01:48] 偽ファイル一致: 失敗 ❌
[2025-05-14 14:01:48] 検証結果グラフを保存しました: test_output/secure_homomorphic_verification.png
[2025-05-14 14:01:48] 
❌ 検証失敗: 暗号化または復号化に問題があります。
[2025-05-14 14:01:48]   - 真の鍵による復号で元の真ファイルが得られませんでした。
[2025-05-14 14:01:48]   - 偽の鍵による復号で元の偽ファイルが得られませんでした。
[2025-05-14 14:01:48] 
準同型暗号マスキング方式 完全検証テスト 完了！処理時間: 0.94秒
[2025-05-14 14:01:48] 詳細ログ: test_output/secure_homomorphic_log_20250514_140147.txt

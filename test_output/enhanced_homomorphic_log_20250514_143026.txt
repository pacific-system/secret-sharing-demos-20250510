[2025-05-14 14:30:26] ====== 拡張準同型暗号マスキング方式テスト ======
[2025-05-14 14:30:26] 真のテストファイルの読み込み: common/true-false-text/t.text
[2025-05-14 14:30:26] 偽のテストファイルの読み込み: common/true-false-text/f.text
[2025-05-14 14:30:26] 読み込み完了: 真=300バイト, 偽=300バイト
[2025-05-14 14:30:26] 真ファイル内容（UTF-8）: 
　　｡:🌸・｡･ﾟ🌸*.ﾟ｡
　･🌸.🌸.🌼🌸｡:*･.🌼
　.ﾟ🌼.｡;｡🌸.:*🌸.ﾟ｡🌸｡
　:*｡_🌸🌼｡_🌸*･_ﾟ🌸
　　＼ξ　＼　ζ／
　　　∧🎀∧＼ξ
　　（＊･ω･)／
　　c/　つ∀o
　　.しー-Ｊおめでとう～🎉☠️
[2025-05-14 14:30:26] 偽ファイル内容（UTF-8）: 
　　｡:🌸・｡･ﾟ🌸*.ﾟ｡
　･🌸.🌸.🌼🌸｡:*･.🌼
　.ﾟ🌼.｡;｡🌸.:*🌸.ﾟ｡🌸｡
　:*｡_🌸🌼｡_🌸*･_ﾟ🌸
　　＼ξ　＼　ζ／
　　　∧🎀∧＼ξ
　　（＊･ω･)／
　　c/　つ∀o
　　.しー-Ｊおめでとう～☠️🎉
[2025-05-14 14:30:26] 暗号化の実行
[2025-05-14 14:30:26] 鍵生成: 真鍵ハッシュ=390e5d06, 偽鍵ハッシュ=88065751
[2025-05-14 14:30:26] 暗号化: 真テキストサイズ=300バイト, 偽テキストサイズ=300バイト
[2025-05-14 14:30:26] 暗号化前の真テキスト: 　　｡:🌸・｡･ﾟ🌸*.ﾟ｡
　･🌸.🌸.🌼🌸｡:*･.🌼
　.ﾟ🌼.｡;｡🌸.:*🌸.ﾟ｡🌸｡
　...
[2025-05-14 14:30:26] 暗号化前の偽テキスト: 　　｡:🌸・｡･ﾟ🌸*.ﾟ｡
　･🌸.🌸.🌼🌸｡:*･.🌼
　.ﾟ🌼.｡;｡🌸.:*🌸.ﾟ｡🌸｡
　...
[2025-05-14 14:30:26] Base64サイズ: 真=400, 偽=400
[2025-05-14 14:30:26] 暗号化データを保存: test_output/enhanced_homomorphic_encrypted.json
[2025-05-14 14:30:26] 真の鍵で復号
[2025-05-14 14:30:26] 復号: 使用する鍵のタイプ=true
[2025-05-14 14:30:26] 復号されたBase64文字列（先頭50文字）: 44CA44CA772hOvCfjLjjg7vvvaHvvaXvvp/wn4y4Ki7vvp/vva...
[2025-05-14 14:30:26] 復号されたテキスト（UTF-8、先頭50文字）: 　　｡:🌸・｡･ﾟ🌸*.ﾟ｡
　･🌸.🌸.🌼🌸｡:*･.🌼
　.ﾟ🌼.｡;｡🌸.:*🌸.ﾟ｡🌸｡
　...
[2025-05-14 14:30:26] 真の鍵での復号結果を保存: test_output/enhanced_homomorphic_true.text
[2025-05-14 14:30:26] 真の鍵での復号結果（UTF-8）: 
　　｡:🌸・｡･ﾟ🌸*.ﾟ｡
　･🌸.🌸.🌼🌸｡:*･.🌼
　.ﾟ🌼.｡;｡🌸.:*🌸.ﾟ｡🌸｡
　:*｡_🌸🌼｡_🌸*･_ﾟ🌸
　　＼ξ　＼　ζ／
　　　∧🎀∧＼ξ
　　（＊･ω･)／
　　c/　つ∀o
　　.しー-Ｊおめでとう～🎉☠️
[2025-05-14 14:30:26] 偽の鍵で復号
[2025-05-14 14:30:26] 復号: 使用する鍵のタイプ=false
[2025-05-14 14:30:26] 復号されたBase64文字列（先頭50文字）: 44CA44CA772hOvCfjLjjg7vvvaHvvaXvvp/wn4y4Ki7vvp/vva...
[2025-05-14 14:30:26] 復号されたテキスト（UTF-8、先頭50文字）: 　　｡:🌸・｡･ﾟ🌸*.ﾟ｡
　･🌸.🌸.🌼🌸｡:*･.🌼
　.ﾟ🌼.｡;｡🌸.:*🌸.ﾟ｡🌸｡
　...
[2025-05-14 14:30:26] 偽の鍵での復号結果を保存: test_output/enhanced_homomorphic_false.text
[2025-05-14 14:30:26] 偽の鍵での復号結果（UTF-8）: 
　　｡:🌸・｡･ﾟ🌸*.ﾟ｡
　･🌸.🌸.🌼🌸｡:*･.🌼
　.ﾟ🌼.｡;｡🌸.:*🌸.ﾟ｡🌸｡
　:*｡_🌸🌼｡_🌸*･_ﾟ🌸
　　＼ξ　＼　ζ／
　　　∧🎀∧＼ξ
　　（＊･ω･)／
　　c/　つ∀o
　　.しー-Ｊおめでとう～☠️🎉
[2025-05-14 14:30:26] 結果の検証
[2025-05-14 14:30:26] 真元データのハッシュ: 088f5b0bbab0b70a3b992763d4138ad25630fff6853eab15e63602a513139d6a
[2025-05-14 14:30:26] 真復号データのハッシュ: 088f5b0bbab0b70a3b992763d4138ad25630fff6853eab15e63602a513139d6a
[2025-05-14 14:30:26] 真データ一致: True
[2025-05-14 14:30:26] 偽元データのハッシュ: b55cd667cee3c8d3b7ba07181912dd974f62b5b9a13a35198a052dcb960bccba
[2025-05-14 14:30:26] 偽復号データのハッシュ: b55cd667cee3c8d3b7ba07181912dd974f62b5b9a13a35198a052dcb960bccba
[2025-05-14 14:30:26] 偽データ一致: True
[2025-05-14 14:30:26] メトリクスを保存: test_output/enhanced_homomorphic_metrics_1747200626.json
[2025-05-14 14:30:26] 視覚化グラフを生成
[2025-05-14 14:30:26] グラフを保存: test_output/enhanced_homomorphic_test_1747200626.png
[2025-05-14 14:30:26] ====== テスト完了 ======
[2025-05-14 14:30:26] ✅ テスト成功: 両方のファイルが正しく復元されました
[2025-05-14 14:30:26] 詳細ログ: test_output/enhanced_homomorphic_log_20250514_143026.txt
